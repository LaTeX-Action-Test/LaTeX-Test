# https://gist.github.com/farr/26d109d947a7ee4a35e37f7d77d91615
name: latex-build
on: [pull_request]
jobs:
  build-latex:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Get and print env
      # https://stackoverflow.com/questions/59077079/how-to-get-pull-request-number-within-github-actions-workflow
      # https://docs.github.com/en/developers/webhooks-and-events/events/github-event-types#pullrequestevent
      env:
          PR: ${{ github.event.pull_request.number }}
          NUMBER: ${{ github.event.issue.number }}
          EVENT_NUMBER: ${{ github.event.number }}
          ISSUE: ${{ github.event.issue.html_url }}
          URL: ${{ github.api_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.repository }}#*/
          RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    - name: Install TeXlive
      run: sudo apt-get install texlive texlive-publishers texlive-science latexmk
    - name: LaTeX Compile
      run: latexmk -pdf PSet.tex
    # https://stackoverflow.com/questions/59810838/how-to-get-the-short-sha-for-the-github-workflow    
    - name: Add SHORT_SHA env property with commit short sha
      run: |
           echo "SHORT_SHA=`echo ${{ github.sha }} | cut -c1-8`" >> $GITHUB_ENV
    - name: Rename the output
      run: |
          cp PSet.pdf PSet-${{ env.SHORT_SHA }}.pdf
   # https://stackoverflow.com/questions/58066966/commenting-a-pull-request-in-a-github-action   
    # https://stackoverflow.com/questions/37786539/how-to-upload-github-asset-file-using-curl
    # https://docs.github.com/en/github-ae@latest/actions/learn-github-actions/environment-variables#default-environment-variables
    # https://www.cazzulino.com/github-actions-repository.html
    # 
    - name: Add comment to PR with pdf
      run: |
          curl \
            -X POST \
            https://api.github.com/repos/${{ env.OWNER }}/${{ env.REPO }}/issues/${{ env.PR }}/comments \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.raw" \
            -H "Content-Type: $(file -b --mime-type PSet-${{ env.SHORT_SHA }}.pdf)" \
            --data-binary @PSet-${{ env.SHORT_SHA }}.pdf \
            -H "X-GitHub-Api-Version: 2022-11-28"
      # Adding a link to the uploaded artifact may be cleaner as one can set retention time
      # however these links do not seem to have a pattern in how they are generated, so
      # use webpage for the run
      # The artifact is also stored as a Zip file
    - uses: actions/upload-artifact@v3            # Upload the artifact
      with:
          name: artifact-${{ env.SHORT_SHA }}
          path: PSet-${{ env.SHORT_SHA }}.pdf
      # https://docs.github.com/en/rest/issues/comments?apiVersion=2022-11-28#create-an-issue-comment    
    - name: Add comment to PR with workflow output
      run: |
          curl \
            -X POST \
            https://api.github.com/repos/${{{ env.OWNER }}/${{ env.REPO }}/issues/${{ env.PR }}/comments \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.text+json" \
            -d '{"body": "Download artifacts from $RUN_URL"}' \
            -H "X-GitHub-Api-Version: 2022-11-28"
